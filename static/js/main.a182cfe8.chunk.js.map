{"version":3,"sources":["services/pokemon.ts","contexts/PokedexContext.tsx","hooks/usePokedex.ts","assets/loading.gif","models/PokemonTypeEnum.ts","components/Loading/styles.ts","components/Loading/index.tsx","components/CustomBar/styles.ts","components/CustomBar/index.tsx","components/PokemonItem/styles.ts","components/PokemonItem/index.tsx","components/PokemonsList/styles.ts","components/PokemonsList/index.tsx","components/AddPokemon/styles.ts","components/AddPokemon/index.tsx","PokedexApp/style.ts","PokedexApp/index.tsx","styles/global.ts","index.tsx"],"names":["baseURL","getPokemons","a","axios","get","response","data","console","error","createPokemon","pokemon","speed","defence","post","log","status","PokedexContext","createContext","PokedexProvider","children","useState","isFetchingPokedex","setIsFetchingPokedex","pokemons","setPokemons","getAll","useCallback","setTimeout","pokemonsResponse","useEffect","Provider","value","addPokemon","updatePokemon","deletePokemon","usePokedex","useContext","PokemonTypeEnum","LoadingPokedexContainer","styled","div","Loading","src","LoadingGif","alt","Container","CustomBar","style","width","className","left","PokemonContainer","props","color","PokemonItem","index","pokemonType","BUG","GHOST","STEEL","FIRE","ROCK","WATER","ELECTRIC","PSYCHIC","getPokemonTypeColor","pokemonImageUrl","pokemonName","strength","PokedexContainer","PokemonsList","map","id","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","margin","AddPokemon","classes","useForm","handleSubmit","control","React","open","setOpen","handleClose","Button","variant","onClick","Dialog","onClose","aria-labelledby","DialogTitle","onSubmit","DialogContent","DialogContentText","name","defaultValue","rules","required","minLength","render","field","onChange","fieldState","TextField","label","helperText","message","min","max","type","FormLabel","component","RadioGroup","aria-label","FormControlLabel","Radio","DialogActions","MainContainer","main","PokedexApp","createGlobalStyle","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a182cfe8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { PokemonModel } from \"../models/PokemonModel\";\r\n\r\ninterface PokemonResponse {\r\n  status: string;\r\n  results: number;\r\n  pokemons: Array<PokemonModel>;\r\n}\r\n\r\nconst baseURL = \"https://pokemon-api-unicamp.herokuapp.com/api/v1/pokemons\";\r\n\r\nexport const getPokemons = async (): Promise<PokemonResponse> => {\r\n  try {\r\n    const response = await axios.get(baseURL);\r\n\r\n    return response.data as PokemonResponse;\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createPokemon = async (\r\n  pokemon: PokemonModel\r\n): Promise<boolean> => {\r\n  pokemon.speed = 1;\r\n  pokemon.defence = 1;\r\n\r\n  try {\r\n    const response = await axios.post(baseURL, pokemon);\r\n\r\n    console.log(\"post\", response.data);\r\n    return response.data.status === \"success\";\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { PokemonModel } from \"../models/PokemonModel\";\r\nimport { getPokemons, createPokemon } from \"../services/pokemon\";\r\n\r\ninterface PokedexProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface PokedexContextData {\r\n  isFetchingPokedex: boolean;\r\n  pokemons: Array<PokemonModel>;\r\n  addPokemon: (pokemon: PokemonModel) => void;\r\n  updatePokemon: (pokemon: PokemonModel) => void;\r\n  deletePokemon: (PokemonModel: PokemonModel) => void;\r\n}\r\n\r\nexport const PokedexContext = createContext({} as PokedexContextData);\r\n\r\nexport function PokedexProvider({ children }: PokedexProviderProps) {\r\n  const [isFetchingPokedex, setIsFetchingPokedex] = useState(true);\r\n  const [pokemons, setPokemons] = useState<Array<PokemonModel>>([]);\r\n\r\n  const getAll = useCallback(async (showLoader = false) => {\r\n    if (showLoader) setIsFetchingPokedex(true);\r\n    setTimeout(async () => {\r\n      const pokemonsResponse = await getPokemons();\r\n      if (pokemonsResponse && pokemonsResponse.pokemons) {\r\n        setPokemons(pokemonsResponse.pokemons);\r\n      }\r\n      setIsFetchingPokedex(false);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAll();\r\n  }, [getAll]);\r\n\r\n  async function addPokemon(pokemon: PokemonModel) {\r\n    setIsFetchingPokedex(true);\r\n\r\n    try {\r\n      const response = await createPokemon(pokemon);\r\n\r\n      if (response) {\r\n        await getAll();\r\n        return;\r\n      }\r\n      setIsFetchingPokedex(false);\r\n    } catch (err) {\r\n      setIsFetchingPokedex(false);\r\n    }\r\n  }\r\n\r\n  function updatePokemon() {\r\n    // TODO: update pokemon PUT\r\n  }\r\n\r\n  function deletePokemon() {\r\n    // TODO: delete pokemon DELETE\r\n  }\r\n\r\n  return (\r\n    <PokedexContext.Provider\r\n      value={{\r\n        isFetchingPokedex,\r\n        pokemons,\r\n        addPokemon,\r\n        updatePokemon,\r\n        deletePokemon,\r\n      }}\r\n    >\r\n      {children}\r\n    </PokedexContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { PokedexContext } from \"../contexts/PokedexContext\";\r\n\r\nexport function usePokedex() {\r\n  const context = useContext(PokedexContext);\r\n\r\n  return context;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.a937902d.gif\";","export enum PokemonTypeEnum {\r\n  BUG = \"Bug\",\r\n  GHOST = \"Ghost\",\r\n  STEEL = \"Steel\",\r\n  FIRE = \"Fire\",\r\n  ROCK = \"Rock\",\r\n  WATER = \"Water\",\r\n  ELECTRIC = \"Electric\",\r\n  PSYCHIC = \"Psychic\",\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingPokedexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  margin-right: 4rem;\r\n\r\n  span {\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-top: 1rem;\r\n    margin-left: 4.2rem;\r\n  }\r\n`;\r\n","import LoadingGif from \"../../assets/loading.gif\";\r\nimport * as S from \"./styles\";\r\n\r\nexport function Loading() {\r\n  return (\r\n    <S.LoadingPokedexContainer>\r\n      <img src={LoadingGif} alt=\"Loading...\" />\r\n      <span>Operando na Pokedéx...</span>\r\n    </S.LoadingPokedexContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n\r\n  span {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  > div {\r\n    flex: 1;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background: var(--gray-line);\r\n    margin: 0 1.5rem;\r\n    position: relative;\r\n  }\r\n\r\n  > div > div {\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background: var(--green);\r\n  }\r\n\r\n  span.current-value {\r\n    position: absolute;\r\n    top: 12px;\r\n    transform: translateX(-50);\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import { Container } from \"./styles\";\r\n\r\ninterface ICustomBar {\r\n  value: number;\r\n}\r\n\r\nexport const CustomBar = ({ value }: ICustomBar) => {\r\n  return (\r\n    <Container>\r\n      <span></span>\r\n      <div>\r\n        <div style={{ width: `${value}%` }} />\r\n\r\n        <span className=\"current-value\" style={{ left: `${value - 5}%` }}>\r\n          {value}\r\n        </span>\r\n      </div>\r\n      <span></span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomBar;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface IPokemonContainer {\r\n  color: string;\r\n}\r\n\r\nexport const PokemonContainer = styled.div<IPokemonContainer>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  background: var(--white);\r\n\r\n  width: 300px;\r\n  height: 180px;\r\n  padding: 15px;\r\n  margin: 16px;\r\n  border-radius: 8px;\r\n\r\n  transition: box-shadow 0.4s;\r\n\r\n  &:hover {\r\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n  }\r\n\r\n  img {\r\n    height: 85px;\r\n    width: 85px;\r\n  }\r\n\r\n  span {\r\n    span {\r\n      color: ${(props) => props.color};\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { PokemonModel } from \"../../models/PokemonModel\";\r\nimport { PokemonTypeEnum } from \"../../models/PokemonTypeEnum\";\r\nimport { CustomBar } from \"../CustomBar\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface IPokemonItem {\r\n  index: number;\r\n  pokemon: PokemonModel;\r\n}\r\n\r\nexport function PokemonItem({ index, pokemon }: IPokemonItem) {\r\n  const getPokemonTypeColor = (): string => {\r\n    switch (pokemon.pokemonType) {\r\n      case PokemonTypeEnum.BUG:\r\n        return \"#A8B820\";\r\n      case PokemonTypeEnum.GHOST:\r\n        return \"#705898\";\r\n      case PokemonTypeEnum.STEEL:\r\n        return \"#B8B8D0\";\r\n      case PokemonTypeEnum.FIRE:\r\n        return \"#F08030\";\r\n      case PokemonTypeEnum.ROCK:\r\n        return \"#B8A038\";\r\n      case PokemonTypeEnum.WATER:\r\n        return \"#6890F0\";\r\n      case PokemonTypeEnum.ELECTRIC:\r\n        return \"#F8D030\";\r\n      case PokemonTypeEnum.PSYCHIC:\r\n        return \"#F85888\";\r\n      default:\r\n        return \"#2E384D\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.PokemonContainer color={getPokemonTypeColor()}>\r\n      <img src={pokemon.pokemonImageUrl} alt={pokemon.pokemonName} />\r\n      <span>\r\n        {pokemon.pokemonName} • <span>{pokemon.pokemonType}</span>\r\n      </span>\r\n\r\n      <br />\r\n      <CustomBar value={pokemon.strength} />\r\n    </S.PokemonContainer>\r\n  );\r\n}\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const PokedexContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  /* flex-direction: column; */\r\n  align-items: center;\r\n  font-weight: 600;\r\n  color: var(--title);\r\n\r\n  @media (max-width: 1340px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 990px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 640px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { usePokedex } from \"../../hooks/usePokedex\";\r\nimport { Loading } from \"../Loading\";\r\nimport { PokemonItem } from \"../PokemonItem\";\r\nimport * as S from \"./styles\";\r\n\r\nexport function PokemonsList() {\r\n  const { isFetchingPokedex, pokemons } = usePokedex();\r\n\r\n  if (isFetchingPokedex) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <S.PokedexContainer>\r\n        {pokemons.map((pokemon, index) => {\r\n          return (\r\n            <PokemonItem key={pokemon.id} index={index} pokemon={pokemon} />\r\n          );\r\n        })}\r\n      </S.PokedexContainer>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  z-index: 100;\r\n`;\r\n","import React from \"react\";\r\nimport { PokemonModel } from \"../../models/PokemonModel\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { usePokedex } from \"../../hooks/usePokedex\";\r\nimport {\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport * as S from \"./styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"300px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddPokemon() {\r\n  const classes = useStyles();\r\n\r\n  const { isFetchingPokedex, addPokemon } = usePokedex();\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = (data: PokemonModel) => {\r\n    setOpen(false);\r\n    addPokemon(data);\r\n  };\r\n\r\n  if (isFetchingPokedex) return <></>;\r\n\r\n  return (\r\n    <S.Container>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        + Adicionar novo Pokemon\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Novo Pokemon</DialogTitle>\r\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Preencha os campos abaixo com as informações do novo Pokemon\r\n            </DialogContentText>\r\n\r\n            <Controller\r\n              name=\"pokemonName\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              rules={{ required: \"Nome é obrigatório\", minLength: 5 }}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  label=\"Pokemon\"\r\n                  variant=\"outlined\"\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name=\"strength\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              rules={{\r\n                required: \"Força é obrigatória\",\r\n                min: 1,\r\n                max: 100,\r\n              }}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  label=\"Força\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name=\"pokemonImageUrl\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              rules={{ required: \"Imagem é obrigatória\", minLength: 5 }}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  label=\"Pokemon Image\"\r\n                  variant=\"outlined\"\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <br />\r\n            <br />\r\n            <FormLabel component=\"legend\">Pokemon Type</FormLabel>\r\n\r\n            <Controller\r\n              name=\"pokemonType\"\r\n              control={control}\r\n              defaultValue=\"Bug\"\r\n              render={({ field: { onChange, value } }) => (\r\n                <RadioGroup\r\n                  aria-label=\"pokemonTypeLabel\"\r\n                  name=\"pokemonTypeLabel\"\r\n                  value={value}\r\n                  onChange={onChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Bug\"\r\n                    control={<Radio />}\r\n                    label=\"Bug\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Ghost\"\r\n                    control={<Radio />}\r\n                    label=\"Ghost\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Steel\"\r\n                    control={<Radio />}\r\n                    label=\"Steel\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Fire\"\r\n                    control={<Radio />}\r\n                    label=\"Fire\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Rock\"\r\n                    control={<Radio />}\r\n                    label=\"Rock\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Water\"\r\n                    control={<Radio />}\r\n                    label=\"Water\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Electric\"\r\n                    control={<Radio />}\r\n                    label=\"Electric\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Psychic\"\r\n                    control={<Radio />}\r\n                    label=\"Psychic\"\r\n                  />\r\n                </RadioGroup>\r\n              )}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Criar\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </S.Container>\r\n  );\r\n}\r\n","import styled, { css } from \"styled-components\";\n\nexport const MainContainer = styled.main`\n  height: 100vh;\n  max-width: 992px;\n  margin: 0 auto;\n  padding: 2.5rem 0rem;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  header {\n    display: flex;\n  }\n\n  section {\n    flex: 1;\n\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 6.25rem;\n    align-content: center;\n  }\n`;\n\nexport const LoadingPokedexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-right: 4rem;\n\n  span {\n    font-weight: 600;\n    font-size: 22px;\n    margin-top: 1rem;\n    margin-left: 4.2rem;\n  }\n`;\n","import React from \"react\";\nimport { PokemonsList } from \"../components/PokemonsList\";\nimport { PokedexProvider } from \"../contexts/PokedexContext\";\nimport AddPokemon from \"../components/AddPokemon\";\nimport * as S from \"./style\";\n\nfunction PokedexApp() {\n  return (\n    <div className=\"App\">\n      <PokedexProvider>\n        <S.MainContainer>\n          <AddPokemon />\n          <PokemonsList />\n        </S.MainContainer>\n      </PokedexProvider>\n    </div>\n  );\n}\n\nexport default PokedexApp;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --white:#fff;\n  --background: #F2F3F5;\n  --gray-line: #DCDDE0;\n  --text: #666666;\n  --title: #2E384D;\n  --red: #E83F5B;\n  --black-primary: rgb(19, 17, 14);\n  --green: rgb(96, 191, 131);\n  --green-dark: rgb(58, 146, 90);\n  --yellow: rgb(253, 224, 94);\n  --yellow-dark: rgb(249, 203, 4);\n  --yellow-darker: rgb(181, 148, 3);\n  --yellow-accent: rgb(255, 255, 0);\n}\n\n@media (max-width: 1080px) {\n  html {\n    font-size: 93.75%;\n  }\n}\n\n@media (max-width: 720px) {\n  html {\n    font-size: 87.5%;\n  }\n}\n\nbody {\n  background: var(--background);\n  color: var(--text);\n}\n\nbody, input, textarea, button, p {\n  font: 400 1rem \"Barlow\", sans-serif;\n}\n\nbutton {\n  cursor: pointer;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PokedexApp from \"./PokedexApp\";\nimport GlobalStyle from \"./styles/global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <PokedexApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}